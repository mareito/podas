// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PodasApi3._1.DataContext;

namespace PodasApi3._1.Migrations
{
    [DbContext(typeof(PodasContext))]
    partial class PodasContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("PodasApi.Entities.Actualizacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Estado")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("NombreTabla")
                        .IsRequired()
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<string>("UsuarioCreacion")
                        .IsRequired()
                        .HasColumnType("varchar(20) CHARACTER SET utf8mb4")
                        .HasMaxLength(20);

                    b.Property<string>("UsuarioModificacion")
                        .HasColumnType("varchar(20) CHARACTER SET utf8mb4")
                        .HasMaxLength(20);

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("actualizaciones");
                });

            modelBuilder.Entity("PodasApi.Entities.DetalleAsignacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<float>("AlturaFinal")
                        .HasColumnType("float");

                    b.Property<float>("AlturaInicial")
                        .HasColumnType("float");

                    b.Property<int>("ArbolId")
                        .HasColumnType("int");

                    b.Property<int>("AsignacionId")
                        .HasColumnType("int");

                    b.Property<int>("CategoriaFinalId")
                        .HasColumnType("int");

                    b.Property<int>("CategoriaInicialId")
                        .HasColumnType("int");

                    b.Property<int>("CuadrillaId")
                        .HasColumnType("int");

                    b.Property<float>("DiametroCFinal")
                        .HasColumnType("float");

                    b.Property<float>("DiametroCInicial")
                        .HasColumnType("float");

                    b.Property<float>("DiametroNFinal")
                        .HasColumnType("float");

                    b.Property<float>("DiametroNInicial")
                        .HasColumnType("float");

                    b.Property<string>("Estado")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int?>("EstadoFisicoId")
                        .HasColumnType("int");

                    b.Property<int?>("EstadoFitosanitarioId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("FechaEjecucion")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("NumeroRadicado")
                        .HasColumnType("int");

                    b.Property<string>("Observacion")
                        .IsRequired()
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.Property<int>("TerceroId")
                        .HasColumnType("int");

                    b.Property<int?>("TipoIntervencionId")
                        .HasColumnType("int");

                    b.Property<int?>("TipoNovedadPodaId")
                        .HasColumnType("int");

                    b.Property<string>("UsuarioCreacion")
                        .IsRequired()
                        .HasColumnType("varchar(20) CHARACTER SET utf8mb4")
                        .HasMaxLength(20);

                    b.Property<string>("UsuarioModificacion")
                        .HasColumnType("varchar(20) CHARACTER SET utf8mb4")
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.HasIndex("ArbolId");

                    b.HasIndex("AsignacionId");

                    b.HasIndex("CategoriaFinalId");

                    b.HasIndex("CategoriaInicialId");

                    b.HasIndex("CuadrillaId");

                    b.HasIndex("EstadoFisicoId");

                    b.HasIndex("EstadoFitosanitarioId");

                    b.HasIndex("TerceroId");

                    b.HasIndex("TipoIntervencionId");

                    b.HasIndex("TipoNovedadPodaId");

                    b.ToTable("detalle_asignacion");
                });

            modelBuilder.Entity("PodasApi.Entities.Tables.Arbol", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<float>("Altura")
                        .HasColumnType("float");

                    b.Property<int>("BarrioId")
                        .HasColumnType("int");

                    b.Property<int>("CategoriaArbolId")
                        .HasColumnType("int");

                    b.Property<int?>("Codigo1")
                        .HasColumnType("int");

                    b.Property<string>("Codigo2")
                        .HasColumnType("varchar(20) CHARACTER SET utf8mb4")
                        .HasMaxLength(20);

                    b.Property<int>("EspecieArbolId")
                        .HasColumnType("int");

                    b.Property<string>("Estado")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("FamiliaArbolId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime(6)");

                    b.Property<double>("Latitud")
                        .HasColumnType("double");

                    b.Property<int>("LocalidadId")
                        .HasColumnType("int");

                    b.Property<double>("Longitud")
                        .HasColumnType("double");

                    b.Property<int>("MunicipioId")
                        .HasColumnType("int");

                    b.Property<int>("TipoEmplazamientoId")
                        .HasColumnType("int");

                    b.Property<string>("UsuarioCreacion")
                        .IsRequired()
                        .HasColumnType("varchar(20) CHARACTER SET utf8mb4")
                        .HasMaxLength(20);

                    b.Property<string>("UsuarioModificacion")
                        .HasColumnType("varchar(20) CHARACTER SET utf8mb4")
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.HasIndex("BarrioId");

                    b.HasIndex("CategoriaArbolId");

                    b.HasIndex("EspecieArbolId");

                    b.HasIndex("FamiliaArbolId");

                    b.HasIndex("LocalidadId");

                    b.HasIndex("MunicipioId");

                    b.HasIndex("TipoEmplazamientoId");

                    b.ToTable("arboles");
                });

            modelBuilder.Entity("PodasApi.Entities.Tables.Asignacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("BarrioId")
                        .HasColumnType("int");

                    b.Property<int>("ContratistaId")
                        .HasColumnType("int");

                    b.Property<int>("CuadrillaId")
                        .HasColumnType("int");

                    b.Property<int>("DetalleProgramacionId")
                        .HasColumnType("int");

                    b.Property<string>("Estado")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("LocalidadId")
                        .HasColumnType("int");

                    b.Property<int>("MunicipioId")
                        .HasColumnType("int");

                    b.Property<int>("ProgramacionPodaId")
                        .HasColumnType("int");

                    b.Property<int?>("TerceroId")
                        .HasColumnType("int");

                    b.Property<int>("TotalCensadoFinal")
                        .HasColumnType("int");

                    b.Property<int>("TotalCensadoInicial")
                        .HasColumnType("int");

                    b.Property<int>("TotalNoCensadoFinal")
                        .HasColumnType("int");

                    b.Property<int>("TotalNoCensadoInicial")
                        .HasColumnType("int");

                    b.Property<string>("UsuarioCreacion")
                        .IsRequired()
                        .HasColumnType("varchar(20) CHARACTER SET utf8mb4")
                        .HasMaxLength(20);

                    b.Property<string>("UsuarioModificacion")
                        .HasColumnType("varchar(20) CHARACTER SET utf8mb4")
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.HasIndex("BarrioId");

                    b.HasIndex("CuadrillaId");

                    b.HasIndex("DetalleProgramacionId");

                    b.HasIndex("LocalidadId");

                    b.HasIndex("MunicipioId");

                    b.HasIndex("ProgramacionPodaId");

                    b.HasIndex("TerceroId");

                    b.ToTable("asignaciones");
                });

            modelBuilder.Entity("PodasApi.Entities.Tables.Barrio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Estado")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("LocalidadId")
                        .HasColumnType("int");

                    b.Property<int>("MunicipioId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.Property<string>("UsuarioCreacion")
                        .IsRequired()
                        .HasColumnType("varchar(20) CHARACTER SET utf8mb4")
                        .HasMaxLength(20);

                    b.Property<string>("UsuarioModificacion")
                        .HasColumnType("varchar(20) CHARACTER SET utf8mb4")
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.HasIndex("LocalidadId");

                    b.HasIndex("MunicipioId");

                    b.ToTable("barrios");
                });

            modelBuilder.Entity("PodasApi.Entities.Tables.CambioEstado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ArbolId")
                        .HasColumnType("int");

                    b.Property<string>("Estado")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Observacion")
                        .IsRequired()
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.Property<string>("UsuarioCreacion")
                        .IsRequired()
                        .HasColumnType("varchar(20) CHARACTER SET utf8mb4")
                        .HasMaxLength(20);

                    b.Property<string>("UsuarioModificacion")
                        .HasColumnType("varchar(20) CHARACTER SET utf8mb4")
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.HasIndex("ArbolId");

                    b.ToTable("cambios_estado");
                });

            modelBuilder.Entity("PodasApi.Entities.Tables.CategoriaArbol", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("AlturaMaxima")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("AlturaMinima")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<string>("Estado")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("UsuarioCreacion")
                        .IsRequired()
                        .HasColumnType("varchar(20) CHARACTER SET utf8mb4")
                        .HasMaxLength(20);

                    b.Property<string>("UsuarioModificacion")
                        .HasColumnType("varchar(20) CHARACTER SET utf8mb4")
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.ToTable("categoria_arbol");
                });

            modelBuilder.Entity("PodasApi.Entities.Tables.ConflictoArbol", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Alumbrado")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("ArbolId")
                        .HasColumnType("int");

                    b.Property<string>("Estado")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<bool>("Estructuras")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("InfraestructuraVial")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("OtrosArboles")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("RedesElectricas")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("RedesGas")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("RedesHidraulicas")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("RedesTelefonicas")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("UsuarioCreacion")
                        .IsRequired()
                        .HasColumnType("varchar(20) CHARACTER SET utf8mb4")
                        .HasMaxLength(20);

                    b.Property<string>("UsuarioModificacion")
                        .HasColumnType("varchar(20) CHARACTER SET utf8mb4")
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.HasIndex("ArbolId");

                    b.ToTable("conflicto_arbol");
                });

            modelBuilder.Entity("PodasApi.Entities.Tables.Cuadrilla", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Descripcion")
                        .HasColumnType("int")
                        .HasMaxLength(50);

                    b.Property<string>("Estado")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("TerceroId")
                        .HasColumnType("int");

                    b.Property<string>("UsuarioCreacion")
                        .IsRequired()
                        .HasColumnType("varchar(20) CHARACTER SET utf8mb4")
                        .HasMaxLength(20);

                    b.Property<string>("UsuarioModificacion")
                        .HasColumnType("varchar(20) CHARACTER SET utf8mb4")
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.HasIndex("TerceroId");

                    b.ToTable("cuadrillas");
                });

            modelBuilder.Entity("PodasApi.Entities.Tables.Departamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Estado")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<string>("UsuarioCreacion")
                        .IsRequired()
                        .HasColumnType("varchar(20) CHARACTER SET utf8mb4")
                        .HasMaxLength(20);

                    b.Property<string>("UsuarioModificacion")
                        .HasColumnType("varchar(20) CHARACTER SET utf8mb4")
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.ToTable("departamentos");
                });

            modelBuilder.Entity("PodasApi.Entities.Tables.DetalleProgramacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.Property<string>("Estado")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaFinal")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaInicial")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("ProgramacionPodaId")
                        .HasColumnType("int");

                    b.Property<string>("UsuarioCreacion")
                        .IsRequired()
                        .HasColumnType("varchar(20) CHARACTER SET utf8mb4")
                        .HasMaxLength(20);

                    b.Property<string>("UsuarioModificacion")
                        .HasColumnType("varchar(20) CHARACTER SET utf8mb4")
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.HasIndex("ProgramacionPodaId");

                    b.ToTable("detalle_programacion");
                });

            modelBuilder.Entity("PodasApi.Entities.Tables.DetalleRechazos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ArbolId")
                        .HasColumnType("int");

                    b.Property<bool>("Corregir")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Estado")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaNovedad")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("Inactivar")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Observacion")
                        .IsRequired()
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.Property<int>("TerceroId")
                        .HasColumnType("int");

                    b.Property<string>("UsuarioCreacion")
                        .IsRequired()
                        .HasColumnType("varchar(20) CHARACTER SET utf8mb4")
                        .HasMaxLength(20);

                    b.Property<string>("UsuarioModificacion")
                        .HasColumnType("varchar(20) CHARACTER SET utf8mb4")
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.HasIndex("ArbolId");

                    b.HasIndex("TerceroId");

                    b.ToTable("detalle_rechazos");
                });

            modelBuilder.Entity("PodasApi.Entities.Tables.EspecieArbol", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Estado")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("FamiliaArbolId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("NombreCientifico")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("NombreComun")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("UsuarioCreacion")
                        .IsRequired()
                        .HasColumnType("varchar(20) CHARACTER SET utf8mb4")
                        .HasMaxLength(20);

                    b.Property<string>("UsuarioModificacion")
                        .HasColumnType("varchar(20) CHARACTER SET utf8mb4")
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.HasIndex("FamiliaArbolId");

                    b.ToTable("especie_arbol");
                });

            modelBuilder.Entity("PodasApi.Entities.Tables.EstadoFisico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Descripcion")
                        .HasColumnType("int")
                        .HasMaxLength(50);

                    b.Property<string>("Estado")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("UsuarioCreacion")
                        .IsRequired()
                        .HasColumnType("varchar(20) CHARACTER SET utf8mb4")
                        .HasMaxLength(20);

                    b.Property<string>("UsuarioModificacion")
                        .HasColumnType("varchar(20) CHARACTER SET utf8mb4")
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.ToTable("estado_fisico");
                });

            modelBuilder.Entity("PodasApi.Entities.Tables.EstadoFitosanitario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Descripcion")
                        .HasColumnType("int")
                        .HasMaxLength(50);

                    b.Property<string>("Estado")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("UsuarioCreacion")
                        .IsRequired()
                        .HasColumnType("varchar(20) CHARACTER SET utf8mb4")
                        .HasMaxLength(20);

                    b.Property<string>("UsuarioModificacion")
                        .HasColumnType("varchar(20) CHARACTER SET utf8mb4")
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.ToTable("estado_fitosanitario");
                });

            modelBuilder.Entity("PodasApi.Entities.Tables.FamiliaArbol", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<string>("Estado")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("UsuarioCreacion")
                        .IsRequired()
                        .HasColumnType("varchar(20) CHARACTER SET utf8mb4")
                        .HasMaxLength(20);

                    b.Property<string>("UsuarioModificacion")
                        .HasColumnType("varchar(20) CHARACTER SET utf8mb4")
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.ToTable("familia_arbol");
                });

            modelBuilder.Entity("PodasApi.Entities.Tables.Localidad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Estado")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("MunicipioId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<string>("UsuarioCreacion")
                        .IsRequired()
                        .HasColumnType("varchar(20) CHARACTER SET utf8mb4")
                        .HasMaxLength(20);

                    b.Property<string>("UsuarioModificacion")
                        .HasColumnType("varchar(20) CHARACTER SET utf8mb4")
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.HasIndex("MunicipioId");

                    b.ToTable("localidades");
                });

            modelBuilder.Entity("PodasApi.Entities.Tables.MedidasArbol", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<float>("Altura")
                        .HasColumnType("float");

                    b.Property<float>("AlturaFus")
                        .HasColumnType("float");

                    b.Property<int>("ArbolId")
                        .HasColumnType("int");

                    b.Property<float>("DiametroC")
                        .HasColumnType("float");

                    b.Property<float>("DiametroN")
                        .HasColumnType("float");

                    b.Property<string>("Estado")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("TipoEmplazamientoId")
                        .HasColumnType("int");

                    b.Property<string>("UsuarioCreacion")
                        .IsRequired()
                        .HasColumnType("varchar(20) CHARACTER SET utf8mb4")
                        .HasMaxLength(20);

                    b.Property<string>("UsuarioModificacion")
                        .HasColumnType("varchar(20) CHARACTER SET utf8mb4")
                        .HasMaxLength(20);

                    b.Property<float>("Volumen")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("ArbolId");

                    b.HasIndex("TipoEmplazamientoId");

                    b.ToTable("medidas_arbol");
                });

            modelBuilder.Entity("PodasApi.Entities.Tables.Municipio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CodigoDane")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("DepartamentoId")
                        .HasColumnType("int");

                    b.Property<string>("Estado")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("UsuarioCreacion")
                        .IsRequired()
                        .HasColumnType("varchar(20) CHARACTER SET utf8mb4")
                        .HasMaxLength(20);

                    b.Property<string>("UsuarioModificacion")
                        .HasColumnType("varchar(20) CHARACTER SET utf8mb4")
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.HasIndex("DepartamentoId");

                    b.ToTable("municipios");
                });

            modelBuilder.Entity("PodasApi.Entities.Tables.ProgramacionPoda", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Estado")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaFin")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Observacion")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("UsuarioCreacion")
                        .IsRequired()
                        .HasColumnType("varchar(20) CHARACTER SET utf8mb4")
                        .HasMaxLength(20);

                    b.Property<string>("UsuarioModificacion")
                        .HasColumnType("varchar(20) CHARACTER SET utf8mb4")
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.ToTable("programacion_poda");
                });

            modelBuilder.Entity("PodasApi.Entities.Tables.RiesgoArbol", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ArbolId")
                        .HasColumnType("int");

                    b.Property<bool>("CaidaElementos")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Estado")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("Ramas")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("UsuarioCreacion")
                        .IsRequired()
                        .HasColumnType("varchar(20) CHARACTER SET utf8mb4")
                        .HasMaxLength(20);

                    b.Property<string>("UsuarioModificacion")
                        .HasColumnType("varchar(20) CHARACTER SET utf8mb4")
                        .HasMaxLength(20);

                    b.Property<bool>("Volcamiento")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.HasIndex("ArbolId");

                    b.ToTable("riesgo_arbol");
                });

            modelBuilder.Entity("PodasApi.Entities.Tables.TarifaPoda", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CategoriaArbolId")
                        .HasColumnType("int");

                    b.Property<string>("Estado")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaFin")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("MunicipioId")
                        .HasColumnType("int");

                    b.Property<string>("UsuarioCreacion")
                        .IsRequired()
                        .HasColumnType("varchar(20) CHARACTER SET utf8mb4")
                        .HasMaxLength(20);

                    b.Property<string>("UsuarioModificacion")
                        .HasColumnType("varchar(20) CHARACTER SET utf8mb4")
                        .HasMaxLength(20);

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaArbolId");

                    b.HasIndex("MunicipioId");

                    b.ToTable("tarifa_poda");
                });

            modelBuilder.Entity("PodasApi.Entities.Tables.Tercero", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Contacto")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.Property<int>("DepartamentoId")
                        .HasColumnType("int");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.Property<string>("Estado")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("MunicipioId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.Property<double>("NumeroIdentificacion")
                        .HasColumnType("double");

                    b.Property<string>("Telefono1")
                        .HasColumnType("varchar(20) CHARACTER SET utf8mb4")
                        .HasMaxLength(20);

                    b.Property<string>("Telefono2")
                        .HasColumnType("varchar(20) CHARACTER SET utf8mb4")
                        .HasMaxLength(20);

                    b.Property<string>("TipoIdentificacion")
                        .IsRequired()
                        .HasColumnType("varchar(1) CHARACTER SET utf8mb4")
                        .HasMaxLength(1);

                    b.Property<string>("UsuarioCreacion")
                        .IsRequired()
                        .HasColumnType("varchar(20) CHARACTER SET utf8mb4")
                        .HasMaxLength(20);

                    b.Property<string>("UsuarioModificacion")
                        .HasColumnType("varchar(20) CHARACTER SET utf8mb4")
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.HasIndex("DepartamentoId");

                    b.HasIndex("MunicipioId");

                    b.ToTable("terceros");
                });

            modelBuilder.Entity("PodasApi.Entities.Tables.TipoEmplazamiento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<string>("Estado")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("UsuarioCreacion")
                        .IsRequired()
                        .HasColumnType("varchar(20) CHARACTER SET utf8mb4")
                        .HasMaxLength(20);

                    b.Property<string>("UsuarioModificacion")
                        .HasColumnType("varchar(20) CHARACTER SET utf8mb4")
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.ToTable("tipo_emplazamiento");
                });

            modelBuilder.Entity("PodasApi.Entities.Tables.TipoIntervencion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("varchar(60) CHARACTER SET utf8mb4")
                        .HasMaxLength(60);

                    b.Property<string>("Estado")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("UsuarioCreacion")
                        .IsRequired()
                        .HasColumnType("varchar(20) CHARACTER SET utf8mb4")
                        .HasMaxLength(20);

                    b.Property<string>("UsuarioModificacion")
                        .HasColumnType("varchar(20) CHARACTER SET utf8mb4")
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.ToTable("tipo_intervencion");
                });

            modelBuilder.Entity("PodasApi.Entities.Tables.TipoNovedadPoda", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<string>("Estado")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("UsuarioCreacion")
                        .IsRequired()
                        .HasColumnType("varchar(20) CHARACTER SET utf8mb4")
                        .HasMaxLength(20);

                    b.Property<string>("UsuarioModificacion")
                        .HasColumnType("varchar(20) CHARACTER SET utf8mb4")
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.ToTable("tipo_novedad");
                });

            modelBuilder.Entity("PodasApi.Entities.Tables.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("CambioClave")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.Property<bool>("CorreoConfirmado")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Estado")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.Property<double>("NumeroIdentificacion")
                        .HasColumnType("double");

                    b.Property<byte[]>("Pasword")
                        .IsRequired()
                        .HasColumnType("longblob");

                    b.Property<byte[]>("Salt")
                        .IsRequired()
                        .HasColumnType("longblob");

                    b.Property<string>("Telefono1")
                        .IsRequired()
                        .HasColumnType("varchar(20) CHARACTER SET utf8mb4")
                        .HasMaxLength(20);

                    b.Property<string>("Telefono2")
                        .IsRequired()
                        .HasColumnType("varchar(20) CHARACTER SET utf8mb4")
                        .HasMaxLength(20);

                    b.Property<int>("TerceroId")
                        .HasColumnType("int");

                    b.Property<string>("TipoIdentificacion")
                        .IsRequired()
                        .HasColumnType("varchar(1) CHARACTER SET utf8mb4")
                        .HasMaxLength(1);

                    b.Property<string>("TipoUsuario")
                        .IsRequired()
                        .HasColumnType("varchar(1) CHARACTER SET utf8mb4")
                        .HasMaxLength(1);

                    b.Property<string>("UsuarioCreacion")
                        .IsRequired()
                        .HasColumnType("varchar(20) CHARACTER SET utf8mb4")
                        .HasMaxLength(20);

                    b.Property<string>("UsuarioModificacion")
                        .HasColumnType("varchar(20) CHARACTER SET utf8mb4")
                        .HasMaxLength(20);

                    b.Property<string>("login")
                        .IsRequired()
                        .HasColumnType("varchar(20) CHARACTER SET utf8mb4")
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.HasIndex("TerceroId");

                    b.ToTable("usuarios");
                });

            modelBuilder.Entity("PodasApi.Entities.DetalleAsignacion", b =>
                {
                    b.HasOne("PodasApi.Entities.Tables.Arbol", "Arbol")
                        .WithMany("DetalleAsignaciones")
                        .HasForeignKey("ArbolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PodasApi.Entities.Tables.Asignacion", "Asignacion")
                        .WithMany()
                        .HasForeignKey("AsignacionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PodasApi.Entities.Tables.CategoriaArbol", "CategoriaFinal")
                        .WithMany("DetalleAsignacionesFinales")
                        .HasForeignKey("CategoriaFinalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PodasApi.Entities.Tables.CategoriaArbol", "CategoriaInicial")
                        .WithMany("DetalleAsignacionesIniciales")
                        .HasForeignKey("CategoriaInicialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PodasApi.Entities.Tables.Cuadrilla", "Cuadrilla")
                        .WithMany("DetalleAsignaciones")
                        .HasForeignKey("CuadrillaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PodasApi.Entities.Tables.EstadoFisico", "EstadoFisico")
                        .WithMany("DetalleAsignacionesIniciales")
                        .HasForeignKey("EstadoFisicoId");

                    b.HasOne("PodasApi.Entities.Tables.EstadoFitosanitario", "EstadoFitosanitario")
                        .WithMany("DetalleAsignacionesIniciales")
                        .HasForeignKey("EstadoFitosanitarioId");

                    b.HasOne("PodasApi.Entities.Tables.Tercero", "Tercero")
                        .WithMany("DetalleAsignaciones")
                        .HasForeignKey("TerceroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PodasApi.Entities.Tables.TipoIntervencion", "TipoIntervencion")
                        .WithMany("DetalleAsignaciones")
                        .HasForeignKey("TipoIntervencionId");

                    b.HasOne("PodasApi.Entities.Tables.TipoNovedadPoda", "TipoNovedadPoda")
                        .WithMany("DetalleAsignacionesIniciales")
                        .HasForeignKey("TipoNovedadPodaId");
                });

            modelBuilder.Entity("PodasApi.Entities.Tables.Arbol", b =>
                {
                    b.HasOne("PodasApi.Entities.Tables.Barrio", "Barrio")
                        .WithMany("Arboles")
                        .HasForeignKey("BarrioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PodasApi.Entities.Tables.CategoriaArbol", "CategoriaArbol")
                        .WithMany("Arboles")
                        .HasForeignKey("CategoriaArbolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PodasApi.Entities.Tables.EspecieArbol", "EspecieArbol")
                        .WithMany()
                        .HasForeignKey("EspecieArbolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PodasApi.Entities.Tables.FamiliaArbol", "FamiliaArbol")
                        .WithMany("Arboles")
                        .HasForeignKey("FamiliaArbolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PodasApi.Entities.Tables.Localidad", "Localidad")
                        .WithMany("Arboles")
                        .HasForeignKey("LocalidadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PodasApi.Entities.Tables.Municipio", "Municipio")
                        .WithMany("Arboles")
                        .HasForeignKey("MunicipioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PodasApi.Entities.Tables.TipoEmplazamiento", "TipoEmplazamiento")
                        .WithMany("Arboles")
                        .HasForeignKey("TipoEmplazamientoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PodasApi.Entities.Tables.Asignacion", b =>
                {
                    b.HasOne("PodasApi.Entities.Tables.Barrio", "Barrio")
                        .WithMany("Asignaciones")
                        .HasForeignKey("BarrioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PodasApi.Entities.Tables.Cuadrilla", "Cuadrilla")
                        .WithMany("Asignaciones")
                        .HasForeignKey("CuadrillaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PodasApi.Entities.Tables.DetalleProgramacion", "DetalleProgramacion")
                        .WithMany("Asignaciones")
                        .HasForeignKey("DetalleProgramacionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PodasApi.Entities.Tables.Localidad", "Localidad")
                        .WithMany("Asignaciones")
                        .HasForeignKey("LocalidadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PodasApi.Entities.Tables.Municipio", "Municipio")
                        .WithMany("Asignaciones")
                        .HasForeignKey("MunicipioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PodasApi.Entities.Tables.ProgramacionPoda", "ProgramacionPoda")
                        .WithMany("Asignaciones")
                        .HasForeignKey("ProgramacionPodaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PodasApi.Entities.Tables.Tercero", "Tercero")
                        .WithMany("Asignaciones")
                        .HasForeignKey("TerceroId");
                });

            modelBuilder.Entity("PodasApi.Entities.Tables.Barrio", b =>
                {
                    b.HasOne("PodasApi.Entities.Tables.Localidad", "Localidad")
                        .WithMany("Barrios")
                        .HasForeignKey("LocalidadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PodasApi.Entities.Tables.Municipio", "Municipio")
                        .WithMany("Barrios")
                        .HasForeignKey("MunicipioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PodasApi.Entities.Tables.CambioEstado", b =>
                {
                    b.HasOne("PodasApi.Entities.Tables.Arbol", "Arbol")
                        .WithMany("CambiosEstado")
                        .HasForeignKey("ArbolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PodasApi.Entities.Tables.ConflictoArbol", b =>
                {
                    b.HasOne("PodasApi.Entities.Tables.Arbol", "Arbol")
                        .WithMany("ConflictosArbol")
                        .HasForeignKey("ArbolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PodasApi.Entities.Tables.Cuadrilla", b =>
                {
                    b.HasOne("PodasApi.Entities.Tables.Tercero", "Tercero")
                        .WithMany("Cuadrillas")
                        .HasForeignKey("TerceroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PodasApi.Entities.Tables.DetalleProgramacion", b =>
                {
                    b.HasOne("PodasApi.Entities.Tables.ProgramacionPoda", "ProgramacionPoda")
                        .WithMany("DetalleProgramaciones")
                        .HasForeignKey("ProgramacionPodaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PodasApi.Entities.Tables.DetalleRechazos", b =>
                {
                    b.HasOne("PodasApi.Entities.Tables.Arbol", "Arbol")
                        .WithMany("DetalleRechazos")
                        .HasForeignKey("ArbolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PodasApi.Entities.Tables.Tercero", "Tercero")
                        .WithMany("DetalleRechazos")
                        .HasForeignKey("TerceroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PodasApi.Entities.Tables.EspecieArbol", b =>
                {
                    b.HasOne("PodasApi.Entities.Tables.FamiliaArbol", "FamiliaArbol")
                        .WithMany("EspeciesArboles")
                        .HasForeignKey("FamiliaArbolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PodasApi.Entities.Tables.Localidad", b =>
                {
                    b.HasOne("PodasApi.Entities.Tables.Municipio", "Municipio")
                        .WithMany("Localidades")
                        .HasForeignKey("MunicipioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PodasApi.Entities.Tables.MedidasArbol", b =>
                {
                    b.HasOne("PodasApi.Entities.Tables.Arbol", "Arbol")
                        .WithMany("MedidasArbol")
                        .HasForeignKey("ArbolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PodasApi.Entities.Tables.TipoEmplazamiento", "TipoEmplazamiento")
                        .WithMany("MedidasArbol")
                        .HasForeignKey("TipoEmplazamientoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PodasApi.Entities.Tables.Municipio", b =>
                {
                    b.HasOne("PodasApi.Entities.Tables.Departamento", "Departamento")
                        .WithMany("Municipios")
                        .HasForeignKey("DepartamentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PodasApi.Entities.Tables.RiesgoArbol", b =>
                {
                    b.HasOne("PodasApi.Entities.Tables.Arbol", "Arbol")
                        .WithMany("RiesgoArbol")
                        .HasForeignKey("ArbolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PodasApi.Entities.Tables.TarifaPoda", b =>
                {
                    b.HasOne("PodasApi.Entities.Tables.CategoriaArbol", "CategoriaArbol")
                        .WithMany("TarifasPodas")
                        .HasForeignKey("CategoriaArbolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PodasApi.Entities.Tables.Municipio", "Municipio")
                        .WithMany("TarifasPodas")
                        .HasForeignKey("MunicipioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PodasApi.Entities.Tables.Tercero", b =>
                {
                    b.HasOne("PodasApi.Entities.Tables.Departamento", "Departamento")
                        .WithMany("Terceros")
                        .HasForeignKey("DepartamentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PodasApi.Entities.Tables.Municipio", "Municipio")
                        .WithMany("Terceros")
                        .HasForeignKey("MunicipioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PodasApi.Entities.Tables.Usuario", b =>
                {
                    b.HasOne("PodasApi.Entities.Tables.Tercero", "Tercero")
                        .WithMany("Usuarios")
                        .HasForeignKey("TerceroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
